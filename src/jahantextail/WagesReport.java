/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jahantextail;

import java.awt.BorderLayout;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.swing.JRViewer;

/**
 *
 * @author MJIL
 */
public class WagesReport extends javax.swing.JFrame {

    /**
     * Creates new form ReportView
     */
    private String parent = "";
    private HashMap parameter;
    private static Connection connection;
    private String fromDate;
    private String toDate;
    DefaultComboBoxModel dm = new DefaultComboBoxModel();
    private String department;
    private String runningShift;
    private String oriShift;

    public WagesReport() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        connection = DbConnect.dbconnect();
        getDepartment();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnReport = new javax.swing.JButton();
        run_week_CB = new javax.swing.JCheckBox();
        fromDateDC = new com.toedter.calendar.JDateChooser();
        departmentCom = new javax.swing.JComboBox<>();
        shiftCom = new javax.swing.JComboBox<>();
        oriShiftTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        toDateDC = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        reportPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 70));

        btnReport.setText("View Report");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        run_week_CB.setText("Running Week");
        run_week_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                run_week_CBActionPerformed(evt);
            }
        });

        departmentCom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select One" }));

        shiftCom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select One", "Day", "Night", "General" }));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Original Shift");

        jLabel2.setText("Department");

        jLabel3.setText("Running Shift");

        jLabel4.setText("Week Start Date");

        jLabel5.setText("Week End Date");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(run_week_CB)
                .addGap(113, 113, 113)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(toDateDC, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(fromDateDC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(shiftCom, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(departmentCom, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oriShiftTF, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReport)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fromDateDC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(departmentCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(run_week_CB)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(oriShiftTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(shiftCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addComponent(toDateDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5))
                        .addGap(0, 22, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnReport)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        reportPanel.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout reportPanelLayout = new javax.swing.GroupLayout(reportPanel);
        reportPanel.setLayout(reportPanelLayout);
        reportPanelLayout.setHorizontalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 998, Short.MAX_VALUE)
        );
        reportPanelLayout.setVerticalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 453, Short.MAX_VALUE)
        );

        getContentPane().add(reportPanel, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
        getMainFilePath();
        getData();
        getParam();
        showReport();


    }//GEN-LAST:event_btnReportActionPerformed

    private void run_week_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_run_week_CBActionPerformed
        // TODO add your handling code here:
        if (run_week_CB.isSelected()) {
            fromDateDC.setEnabled(false);
            toDateDC.setEnabled(false);

        } else {
            fromDateDC.setEnabled(true);
            toDateDC.setEnabled(true);
            //fromDate = null;
            //toDate = null;
        }
    }//GEN-LAST:event_run_week_CBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WagesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WagesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WagesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WagesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new WagesReport().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReport;
    private javax.swing.JComboBox<String> departmentCom;
    private com.toedter.calendar.JDateChooser fromDateDC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField oriShiftTF;
    private javax.swing.JPanel reportPanel;
    private javax.swing.JCheckBox run_week_CB;
    private javax.swing.JComboBox<String> shiftCom;
    private com.toedter.calendar.JDateChooser toDateDC;
    // End of variables declaration//GEN-END:variables

    private void getMainFilePath() {
        File mainFilePath = new File("AutoRetresh.class");
        File parentLocation = new File(mainFilePath.getAbsolutePath());
        parent = parentLocation.getParent();
        //System.out.println(parent);
    }

    private void getParam() {

        if (department.equals("Time Rate") || department.equals("Folding")) {
            parameter = new HashMap();
            parameter.put("from_date", fromDate);
            parameter.put("to_date", toDate);
            parameter.put("department", department);
            parameter.put("shift", runningShift);
        } else {
            parameter = new HashMap();
            parameter.put("SUBREPORT_DIR", parent);
            parameter.put("from_date", fromDate);
            parameter.put("to_date", toDate);
            parameter.put("department", department);
            parameter.put("shift", runningShift);
            parameter.put("shift_ori", oriShift);
        }
    }

    private void showReport() {

        reportPanel.removeAll();
        reportPanel.repaint();
        reportPanel.revalidate();

        try {

            switch (department) {
                case "Time Rate":
                    {
                        JasperDesign jDesign = JRXmlLoader.load(parent + "\\src\\jahantextail\\reports\\time_rate_report.jrxml");
                        JasperReport jReport = JasperCompileManager.compileReport(jDesign);
                        JasperPrint jPrint = JasperFillManager.fillReport(jReport, parameter, connection);
                        JRViewer jRViewer = new JRViewer(jPrint);
                        reportPanel.setLayout(new BorderLayout());
                        reportPanel.add(jRViewer);
                        break;
                    }
                case "Folding":
                    {
                        JasperDesign jDesign = JRXmlLoader.load(parent + "\\src\\jahantextail\\reports\\folding_man_report.jrxml");
                        JasperReport jReport = JasperCompileManager.compileReport(jDesign);
                        JasperPrint jPrint = JasperFillManager.fillReport(jReport, parameter, connection);
                        JRViewer jRViewer = new JRViewer(jPrint);
                        reportPanel.setLayout(new BorderLayout());
                        reportPanel.add(jRViewer);
                        break;
                    }
                default:
                    {
                        JasperDesign jDesign = JRXmlLoader.load(parent + "\\src\\jahantextail\\reports\\test.jrxml");
                        JasperReport jReport = JasperCompileManager.compileReport(jDesign);
                        JasperPrint jPrint = JasperFillManager.fillReport(jReport, parameter, connection);
                        JRViewer jRViewer = new JRViewer(jPrint);
                        reportPanel.setLayout(new BorderLayout());
                        reportPanel.add(jRViewer);
                        break;
                    }
            }

        } catch (JRException ex) {
            Logger.getLogger(WagesReport.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void getRunningDate() {
        try {
            String sql = "select * from running_week";
            PreparedStatement statement = connection.prepareStatement(sql);
            ResultSet rs = statement.executeQuery();
            if (rs.next()) {
                fromDate = rs.getString("from_date");
                toDate = rs.getString("to_date");
            }
            System.err.println(fromDate + " " + toDate);
            
            statement.close();
            rs.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void getDepartment() {
        departmentCom.removeAllItems();
        dm.addElement("Select One");
        try {
            String sql = "select * from department";
            PreparedStatement statement = connection.prepareStatement(sql);
            ResultSet rs = statement.executeQuery();
            while (rs.next()) {
                dm.addElement(rs.getString("name"));
                departmentCom.setModel(dm);
            }
            statement.close();
            rs.close();
        } catch (SQLException e) {
        }
    }

    private void getData() {

        if (run_week_CB.isSelected()) {
            getRunningDate();
        } else {
            SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
            fromDate = sdf.format(fromDateDC.getDate().getTime());
            toDate = sdf.format(toDateDC.getDate().getTime());
        }
        department = departmentCom.getSelectedItem().toString();
        runningShift = shiftCom.getSelectedItem().toString();
        oriShift = oriShiftTF.getText();
        System.err.println(fromDate+"\t"+toDate);
    }

}
